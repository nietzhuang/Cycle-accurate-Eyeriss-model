import numpy as np


def conv2D(filter, image, stride):
    filter_height, filter_width = filter.shape
    image_height, image_width = image.shape
    ofmap_height = image_height - filter_height + stride
    ofmap_width = image_width - filter_width + stride

    ofmap = np.zeros((ofmap_height, ofmap_width))
    with open('psum.dat', 'w') as p:
        for i in range(ofmap_height):
            for j in range(ofmap_width):
                ofpsum = np.multiply(filter[:, :], image[0+i:filter_height+i, 0+j:filter_width+j])
                p.write("ofmpa psum[%d][%d]\n" % (i, j))
                p.write(str(ofpsum))
                p.write('\n')

                ofmap[i, j] = sum(sum(ofpsum))
    return ofmap[:, :]

def conv3D(filter, image, stride):
    #filter_height, filter_width, channel_number = filter.shape
    #image_height, image_width, channel_number = image.shape
    channel_number, filter_height, filter_width = filter.shape
    channel_number, image_height, image_width = image.shape
    ofmap_height = image_height - filter_height + stride
    ofmap_width = image_width - filter_width + stride

    psum = np.zeros((channel_number, ofmap_height, ofmap_width))
    for ch in range(channel_number):
        for i in range(ofmap_height):
            for j in range(ofmap_width):
                ofpsum = np.multiply(filter[ch, :, :], image[ch, 0+i:filter_height+i, 0+j:filter_width+j])
                psum[ch ,i, j] =  sum(sum(ofpsum))
                ofmap = sum(psum)

    return ofmap, psum

"""
# 34 x 34
image = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 3, 2, 1, 7, 8, 0, 6, 0, 0, 0, 3, 2, 1, 7, 8, 0, 6, 0, 0, 0, 3, 2, 1, 0, 1, 4, 3, 0, 4, 2, 3, 1, 0],
                  [0, 1, 1, 2,10, 2, 0, 0, 1, 1, 0, 1, 4, 3, 0, 1, 7, 4, 3, 0, 1, 1, 4, 3, 0, 0, 1, 7, 4, 3, 5, 1, 7, 0],
                  [0, 1, 2, 1, 6, 3, 1, 5, 8, 3, 0, 2, 3, 2, 2, 1, 0, 2, 3, 2, 2, 1, 0, 1, 2, 1, 0, 2, 3, 4, 2, 5, 7, 0],
                  [0, 2, 3, 2, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 2, 1, 2, 1, 2, 1, 0, 1, 7, 0],
                  [0, 1, 4, 1, 4, 3, 0, 1, 0, 1, 0, 3, 1, 5, 2, 3, 2, 2, 1, 0, 1, 0, 1, 3, 3, 1, 5, 2, 3, 3, 2, 0, 4, 0],
                  [0, 3, 3, 3, 2, 8, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 1, 4, 3, 2, 1, 0, 0, 0, 1, 1, 0, 1, 4, 1, 6, 5, 0],
                  [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 2, 3, 1, 5, 8, 3, 0, 2, 2, 2, 3, 1, 5, 2, 2, 3, 0],
                  [0, 0, 0, 1, 3, 5, 3, 3, 1, 2, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3, 0, 3, 5, 3, 1, 3, 5, 3, 3, 1, 0],
                  [0, 0, 0, 1, 0, 3, 8, 7, 0, 6, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3, 1, 6, 0, 1, 3, 5, 3, 1, 2, 5, 0],
                  [0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 0, 1, 0, 2, 1, 0, 2, 1, 1, 0, 1, 0, 2, 1, 0, 2, 3, 2, 1, 1, 2, 3, 0],
                  [1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 5, 8, 3, 0, 0, 1, 0],
                  [0, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 3, 5, 3, 1, 3, 5, 3, 1, 1, 2, 0, 0, 1, 2, 1, 0, 9, 0],
                  [0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 2, 2, 3, 5, 3, 1, 3, 5, 3, 3, 2, 0, 0, 2, 0, 0, 1, 1, 0, 1, 0, 0, 0],
                  [0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 2, 1, 0, 2, 1, 1, 0, 1, 1, 5, 2, 0, 1, 0, 3, 1, 5, 0],
                  [0, 0, 1, 3, 5, 3, 1, 3, 5, 3, 3, 0, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 2, 3, 3, 0],
                  [0, 1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 2, 1, 1, 2, 1, 3, 5, 3, 1, 3, 5, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 0],
                  [1, 0, 3, 8, 7, 0, 6, 0, 1, 3, 0, 1, 0, 3, 8, 7, 0, 0, 1, 0, 2, 1, 0, 2, 1, 1, 0, 0, 1, 3, 5, 4, 3, 0],
                  [0, 2, 1, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 1, 2, 3, 2, 1, 0, 1, 0, 2, 1, 0, 2, 2, 1, 0, 1, 2, 5, 4, 0, 0],
                  [0, 2, 1, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 0, 0, 2, 0, 0, 1, 1, 0, 0],
                  [0, 6, 0, 1, 3, 5, 3, 1, 3, 5, 3, 0, 6, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 1, 1, 1, 1, 0, 3, 2, 1, 1, 1, 0],
                  [0, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 1, 2, 3, 2, 1, 0, 1, 0, 2, 1, 0, 0, 1, 2, 1, 9, 8, 0],
                  [1, 5, 8, 3, 0, 1, 1, 1, 1, 0, 3, 1, 5, 1, 5, 8, 1, 3, 5, 3, 1, 3, 7, 6, 2, 3, 0, 1, 1, 1, 0, 3, 1, 0],
                  [1, 5, 8, 3, 0, 1, 1, 1, 1, 0, 3, 1, 5, 0, 1, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 1, 1, 3, 5, 3, 1, 3, 5, 0],
                  [0, 1, 1, 0, 2, 2, 3, 5, 3, 1, 3, 5, 3, 3, 2, 0, 0, 2, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 0, 0, 2, 0],
                  [0, 1, 3, 5, 3, 1, 3, 5, 1, 1, 1, 0, 3, 1, 5, 0, 2, 1, 1, 2, 1, 3, 5, 3, 1, 3, 5, 1, 1, 1, 2, 3, 1, 0],
                  [0, 5, 8, 3, 0, 2, 1, 1, 2, 1, 3, 5, 3, 1, 3, 5, 1, 1, 1, 0, 0, 1, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0],
                  [0, 4, 2, 1, 1, 2, 3, 2, 1, 0, 1, 0, 2, 1, 0, 0, 3, 0, 2, 1, 1, 2, 1, 3, 5, 3, 1, 3, 3, 5, 3, 1, 1, 0],
                  [0, 0, 3, 1, 5, 8, 3, 0, 2, 1, 1, 2, 1, 3, 5, 3, 1, 3, 5, 1, 1, 1, 0, 3,10, 3, 5, 1, 1, 1, 1, 2, 0, 0],
                  [0, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3, 0, 3, 5, 3, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 2, 0, 0, 0],
                  [0, 2, 2, 1, 0, 1, 0, 1, 3, 3, 1, 5, 2, 3, 1, 2, 2, 3, 5, 3, 1, 3, 5, 3, 3, 2, 0, 0, 2, 9, 2, 3, 1, 0],
                  [0, 3, 8, 7, 0, 0, 1, 0, 2, 1, 0, 2, 1, 1, 0, 0, 1, 3, 5, 1, 2, 3, 1, 3, 5, 3, 0, 6, 0, 1, 3, 5, 4, 0],
                  [0, 5, 8, 1, 3, 5, 3, 1, 3, 7, 6, 2, 3, 0, 1, 1, 1, 0, 3, 3, 0, 2, 1, 1, 2, 1, 3, 5, 3, 1, 3, 8, 9, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])


# 25 x 25
a = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [0, 3, 2, 1, 7, 8, 0, 6, 0, 0, 0, 3, 2, 1, 7, 8, 0, 6, 0, 0, 0, 3, 2, 1, 0],
              [0, 1, 1, 2,10, 2, 0, 0, 1, 1, 0, 1, 4, 3, 0, 1, 7, 4, 3, 0, 1, 1, 4, 3, 0],
              [0, 1, 2, 1, 6, 3, 1, 5, 8, 3, 0, 2, 3, 2, 2, 1, 0, 2, 3, 2, 2, 1, 0, 1, 0],
              [0, 2, 3, 2, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 0],
              [0, 1, 4, 1, 4, 3, 0, 1, 0, 1, 0, 3, 1, 5, 2, 3, 2, 2, 1, 0, 1, 0, 1, 0, 0],
              [0, 3, 3, 3, 2, 8, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 1, 4, 3, 2, 1, 0, 0, 0],
              [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 2, 3, 2, 2, 3, 1, 5, 0],
              [0, 0, 0, 1, 3, 5, 3, 3, 1, 2, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3, 0, 0],
              [0, 0, 0, 1, 0, 3, 8, 7, 0, 6, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3, 1, 0],
              [0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 1, 2, 3, 0],
              [1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 0, 1, 0],
              [0, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 2, 0, 0, 1, 2, 1, 0, 9, 0],
              [0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 0, 0, 0],
              [0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 0, 1, 0, 3, 1, 5, 2, 0, 1, 0, 3, 1, 5, 0],
              [0, 0, 1, 3, 5, 3, 1, 3, 5, 3, 3, 0, 1, 1, 1, 1, 0, 3, 3, 0, 1, 1, 1, 1, 0],
              [0, 1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 2, 1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 0],
              [1, 0, 3, 8, 7, 0, 6, 0, 1, 3, 0, 1, 0, 3, 8, 7, 0, 6, 0, 1, 3, 5, 4, 3, 0],
              [0, 2, 1, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 1, 2, 3, 2, 1, 0, 1, 0, 2, 1, 0, 0],
              [0, 2, 1, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 1, 2, 3, 0, 0, 2, 0, 0, 1, 1, 0, 0],
              [0, 6, 0, 1, 3, 5, 3, 1, 3, 5, 3, 0, 6, 0, 1, 3, 5, 3, 1, 3, 5, 3, 1, 1, 0],
              [0, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 2, 1, 2, 0, 0, 1, 2, 1, 9, 8, 0],
              [1, 5, 8, 3, 0, 1, 1, 1, 1, 0, 3, 1, 5, 1, 5, 8, 3, 0, 1, 1, 1, 0, 3, 1, 0],
              [1, 5, 8, 3, 0, 1, 1, 1, 1, 0, 3, 1, 5, 0, 1, 3, 5, 3, 1, 3, 5, 9, 5, 1, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])

#19 x 19
image = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 3, 2, 1, 7, 8, 0, 6, 0, 0, 0, 3, 2, 1, 7, 0, 1, 0, 0],
                  [0, 1, 1, 2,10, 2, 0, 0, 1, 1, 0, 1, 4, 3, 0, 5, 5, 0, 0],
                  [0, 1, 2, 1, 6, 3, 1, 5, 8, 3, 0, 2, 3, 2, 0, 9, 1, 0, 0],
                  [0, 2, 3, 2, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 0, 7, 1, 1, 0],
                  [0, 1, 4, 1, 4, 3, 0, 1, 0, 1, 0, 3, 1, 5, 1, 2, 4, 7, 0],
                  [0, 3, 3, 3, 2, 8, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 2, 1, 0],
                  [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 1, 5, 0, 2, 3, 5, 0],
                  [0, 0, 0, 1, 3, 5, 3, 3, 1, 2, 0, 1, 3, 5, 7, 8, 1, 0, 0],
                  [0, 0, 0, 1, 0, 3, 8, 7, 0, 6, 0, 1, 3, 5, 0, 7, 1, 1, 0],
                  [0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 0, 1, 0, 6, 2, 3, 0, 0],
                  [1, 1, 1, 1, 0, 3, 1, 5, 8, 3, 0, 1, 1, 1, 0, 1, 1, 1, 0],
                  [0, 2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 1, 2, 1, 5, 0, 0, 2, 0],
                  [0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 2, 2, 2, 1, 1, 4, 1, 0],
                  [0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 0, 0, 1, 0, 3, 3, 2, 4, 0],
                  [0, 2, 5, 3, 0, 1, 0, 1, 0, 3, 1, 0, 2, 1, 2, 2, 2, 1, 0],
                  [0, 2, 0, 0, 1, 1, 0, 1, 4, 3, 1, 2, 2, 2, 1, 4, 8, 5, 0],
                  [0, 1, 5, 8, 3, 0, 1, 1, 1, 0, 2, 1, 3, 5, 8, 5, 1, 0, 0],
                  [0, 3, 1, 5, 8, 3, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 2, 0, 0]])

# 12 x 12
b = np.array([[2, 2, 3, 1, 0, 0, 1, 5, 6, 2, 1, 1],
              [1, 3, 1, 5, 0, 1, 0, 0, 1, 8, 7, 3],
              [4, 0, 4, 1, 2, 1, 0, 6, 1, 2, 0, 4],
              [4, 0, 0, 0, 7, 1, 2, 1, 0, 6, 1, 6],
              [1, 0, 1, 9, 0, 2, 1, 0, 6, 1, 2, 7],
              [3, 0, 1, 5, 0, 2, 1, 0, 0, 0, 0, 1],
              [0, 7, 1, 2, 1, 0, 9, 1, 2, 1, 1, 0],
              [0, 4, 1, 2, 1, 0, 6, 1, 5, 1, 7, 3],
              [0, 7, 1, 2, 1, 0, 1, 2, 8, 7, 6, 3],
              [0, 0, 0, 7, 1, 2, 1, 0, 1, 1, 1, 1],
              [0, 0, 0, 0, 5, 0, 2, 5, 8, 1, 3, 0],
              [0, 0, 0, 7, 0, 2, 9, 0, 1, 1,10, 1]])

# 11 x 11
a = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
              [0, 3, 2, 1, 7, 8, 0, 6, 0, 0, 0],
              [0, 1, 1, 2,10, 2, 0, 0, 1, 1, 0],
              [0, 1, 2, 1, 6, 3, 1, 5, 8, 3, 0],
              [0, 2, 3, 2, 2, 1, 0, 0, 1, 0, 0],
              [0, 1, 4, 1, 4, 3, 0, 1, 0, 1, 0],
              [0, 3, 3, 3, 2, 8, 2, 2, 2, 0, 0],
              [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
              [0, 0, 0, 1, 3, 5, 3, 3, 1, 2, 0],
              [0, 0, 0, 1, 0, 3, 8, 7, 0, 6, 0],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])

# 5 x 5
filter = np.array([[2, 2, 3, 1, 0],
              [1, 3, 1, 5, 0],
              [4, 0, 4, 1, 2],
              [4, 0, 0, 0, 7],
              [1, 0, 1, 9, 0]])
"""

filter = np.random.randint(0, 9, size=(3, 5, 5)) # channel, height, width
#image = np.random.randint(0, 9, size=(3, 19, 19))


ofmap = conv2D(filter, image, stride=1)
# ofmap, psum = conv3D(filter, image, stride=1)


with open('filter.dat', 'w') as f:
    f.write(str(filter))

with open('image.dat', 'w') as im:
    im.write(str(image))

#with open('psum.dat', 'w') as p:
#    p.write(str(psum))

with open('ofmap.dat', 'w') as om:
    om.write(str(ofmap))

f.close()
im.close()
#p.close()
